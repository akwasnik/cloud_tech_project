version: '3.8'

services:

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.4
    container_name: keycloak
    command: ["start-dev", "--import-realm", "--verbose"]
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KEYCLOAK_IMPORT=/opt/keycloak/data/import/master-realm.json
    volumes:
      - ./master-realm.json:/opt/keycloak/data/import/master-realm.json:ro
    ports:
      - "${KEYCLOAK_PORT}:${KEYCLOAK_PORT}"
    networks:
      - app-net
    restart: unless-stopped

  client:
    build: ./client
    image: client:latest
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    networks:
      - app-net

  redis:
    image: redis:8-alpine
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    networks:
      - app-net

  server:
    build: ./server/.
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    command: node app.js
    networks:
      - app-net
    depends_on:
      db:
        condition: service_healthy
  
  db:
    image: postgres:17.5
    container_name: db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - app-net
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s


networks:
  app-net:
    driver: bridge

volumes:
  redis_data:
  db_data: