services:

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.4
    container_name: keycloak
    command: ["start-dev", "--import-realm", "--verbose"]
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_BOOTSTRAP_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}
      - KEYCLOAK_IMPORT=/opt/keycloak/data/import/master-realm.json
    volumes:
      - ./master-realm.json:/opt/keycloak/data/import/master-realm.json:ro
    ports:
      - "${KEYCLOAK_PORT}:${KEYCLOAK_PORT}"
    networks:
      - app-net
    restart: always

  client:
    build: ./client
    image: client:latest
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    networks:
      - app-net
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - SERVER_PORT=${SERVER_PORT}
      - CLIENT_PORTPORT=${CLIENT_PORT}
      - KEYCLOAK_PORT=${KEYCLOAK_PORT}
    depends_on:
      - rabbitmq


  redis:
    image: redis:8-alpine
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    networks:
      - app-net

  server:
    build: ./server/.
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    command: node app.js
    environment:
      - PORT=${SERVER_PORT}
      - REDIS_PORT=${REDIS_PORT}
      - DB_PORT=${POSTGRES_PORT}
    networks:
      - app-net
    depends_on:
      db:
        condition: service_healthy
  
  db:
    image: postgres:17.5
    container_name: db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - app-net
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s

  rabbitmq:
      image: rabbitmq:4.1-management-alpine
      container_name: rabbitmq
      ports:
        - "${RABBITMQ_PORT}:${RABBITMQ_PORT}" 
        - "${RABBITMQ_WEB_PORT}:${RABBITMQ_WEB_PORT}"
      environment:
        RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
        RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      networks:
        - app-net

networks:
  app-net:
    driver: bridge

volumes:
  redis_data:
  db_data: